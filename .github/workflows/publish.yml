name: Generate ICS file
on:
  workflow_dispatch:
  push:
    branches:
      - "*"
  schedule:
    - cron: '0 * * * *' # every hour

jobs:
  # Build job
  build:
    # Specify runner +  build & upload the static files as an artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set short SHA, Commit Message and Ruby version to ENV
        run: |
          echo "RUBY_VERSION=$(grep ^ruby Gemfile | cut -f2 -d'"')" >> $GITHUB_ENV
      #     echo "COMMIT_SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_ENV
      #     echo "COMMIT_MESSAGE=$(git log --pretty=format:%s -n 1)" >> $GITHUB_ENV

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Convert Markdown to HTML
        uses: natescherer/markdown-to-html-with-github-style-action@v1.1.0
        with:
          path: index.md
          outputpath: build

      - name: Build static files
        id: build
        run: |
          ./bin/reader.rbx

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
        with:
          path: build/
      - name: Commit and push changes
        run: |-
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "BerenBot"
            git config user.email "bot@wendbaar.nl"
            git add -f build/*json
            timestamp=$(date -u)
            git commit -m "Latest data: ${timestamp}" || exit 0
            git push origin ${{ github.ref }}
          fi

  # Deployment job
  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
